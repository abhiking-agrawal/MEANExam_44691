{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-car/add-car.component.css","webpack:///./src/app/add-car/add-car.component.html","webpack:///./src/app/add-car/add-car.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/car.ts","webpack:///./src/app/common/data.service.ts","webpack:///./src/app/detail/detail.component.css","webpack:///./src/app/detail/detail.component.html","webpack:///./src/app/detail/detail.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,s6H;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACd;AACK;AACY;AAOrD;IAIE,yBAAoB,KAAc,EAAS,WAAyB;QAAhD,UAAK,GAAL,KAAK,CAAS;QAAS,gBAAW,GAAX,WAAW,CAAc;QAHpE,SAAI,GAAG,GAAG;QAEV,aAAQ,GAAG,EAAE;QAEX,IAAI,CAAC,MAAM,GAAG,IAAI,+CAAG,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;IACxB,CAAC;IAED,kCAAQ,GAAR;IACA,CAAC;IAID,yCAAe,GAAf,UAAgB,IAAI;QAClB,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC;QACrD,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,CAAC;IAEH,CAAC;IAED,mCAAS,GAAT,UAAU,MAAM;QACd,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,GAAG;IACjB,CAAC;IAED,yCAAe,GAAf,UAAgB,MAAM;QAAtB,iBAYC;QAXC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;QAC1C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;aACvC,SAAS,CAAC,UAAC,IAAQ;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,aAAa,GAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAChD,CAAC,EACH,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,OAAO,EAAC,GAAG,CAAC;QAC1B,CAAC,CAAC;IAEJ,CAAC;IAxCU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAK4B,sDAAM,EAAuB,gEAAW;OAJzD,eAAe,CA0C3B;IAAD,sBAAC;CAAA;AA1C2B;;;;;;;;;;;;;;;;;;;;;;;;;ACVa;AACc;AACO;AACF;AAE5D,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAG,QAAQ,EAAE,SAAS,EAAE,0EAAe,EAAC;IAC7C,EAAC,IAAI,EAAG,eAAe,EAAE,SAAS,EAAE,wEAAe,EAAC;IACpD,EAAC,IAAI,EAAG,EAAE,EAAE,UAAU,EAAC,SAAS,EAAE,SAAS,EAAC,MAAM,EAAC;CACpD,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAC,EAAC,OAAO,EAAG,IAAI,EAAC,CAAC,CAAC;YACxD,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACf7B,mB;;;;;;;;;;;ACAA,oD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACG;AACW;AACC;AACT;AACe;AACF;AAiB5D;IAAA;IAAyB,CAAC;IAAb,SAAS;QAfrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,0EAAe;gBACf,wEAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,qEAAgB;gBAChB,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACxBtB;AAAA;IAAA;IAOA,CAAC;IAAD,UAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP0C;AACO;AAKlD;IAEE,qBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAE1C,kCAAY,GAAZ,UAAa,IAAI;QACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gDAAgD,EAAC,IAAI,CAAC;IAC9E,CAAC;IAED,kCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iDAAiD,CAAC;IACzE,CAAC;IAVU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG2B,+DAAU;OAF1B,WAAW,CAWvB;IAAD,kBAAC;CAAA;AAXuB;;;;;;;;;;;;ACNxB,mB;;;;;;;;;;;ACAA,iJAAiJ,uHAAuH,WAAW,8CAA8C,mDAAmD,UAAU,kB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5U;AACG;AACJ;AAOjD;IAIE,yBAAoB,KAAqB,EAAU,WAAwB;QAAvD,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEhF,kCAAQ,GAAR;QAAA,iBA+BC;QA9BC,IAAI,CAAC,SAAS,GAAG,0BAA0B;QAC3C,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CACvC,UAAC,IAAU;YACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAC7B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAEhD,EAAE,EAAC,KAAI,CAAC,SAAS,IAAI,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAC;gBAChD,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,QAAQ,EAAE;gBAC3D,EAAE,EAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAG,CAAC,CAAC,EAAC;oBACtC,KAAI,CAAC,QAAQ,GAAG,EAAE;gBACpB,CAAC;gBAAA,IAAI,EAAC;oBACJ,KAAI,CAAC,QAAQ,GAAG,EAAE;gBACpB,CAAC;gBACD,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAChE,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC;YAEpB,CAAC;QACH,CAAC,CAAC,CAAC;QACL,0CAA0C;QAC1C,mCAAmC;QACnC,gCAAgC;QAChC,6DAA6D;QAC7D,kBAAkB;QAClB,0BAA0B;QAC1B,qCAAqC;QACrC,UAAU;QACV,YAAY;QACZ,yBAAyB;QACzB,KAAK;IACP,CAAC;IArCU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAK2B,8DAAc,EAAuB,gEAAW;OAJhE,eAAe,CAsC3B;IAAD,sBAAC;CAAA;AAtC2B;;;;;;;;;;;;;;ACT5B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"col-sm-12\\\" [ngSwitch]=\\\"step\\\">\\n  <div class=\\\"row justify-content-sm-center\\\" *ngSwitchCase=\\\"1\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <h3 class=\\\"text-center\\\">User Cars Search Engine</h3>\\n      <form (ngSubmit)=\\\"goToStep2(carObj)\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleFormControlInput1\\\">*Make</label>\\n          <input type=\\\"text\\\" required class=\\\"form-control\\\" name=\\\"make\\\" [(ngModel)]=\\\"carObj.make\\\" id=\\\"exampleFormControlInput1\\\"\\n            placeholder=\\\"Enter make\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"model\\\">*Model</label>\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"carObj.model\\\" name=\\\"model\\\" >\\n            <option value=\\\"\\\"> Select</option>\\n            <option> Civic</option>\\n            <option> Odyssey</option>\\n            <option> Pilot</option>\\n            <option> Accord</option>\\n        </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleFormControlInput1\\\">*year</label>\\n          <input type=\\\"text\\\" required class=\\\"form-control\\\" name=\\\"year\\\" [(ngModel)]=\\\"carObj.year\\\" id=\\\"exampleFormControlInput1\\\"\\n            placeholder=\\\"Enter year\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"form-check form-check-inline\\\">\\n              <b>Type</b>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n              <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"carObj.type\\\" type=\\\"radio\\\" name=\\\"type\\\" id=\\\"inlineRadio1\\\" value=\\\"Sedan\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"inlineRadio1\\\">Sedan</label>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n              <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"carObj.type\\\" type=\\\"radio\\\" name=\\\"type\\\" id=\\\"inlineRadio2\\\" value=\\\"Coupe\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"inlineRadio2\\\">Coupe</label>\\n          </div>\\n    \\n      </div>\\n        <div class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit form</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"row justify-content-sm-center\\\" *ngSwitchCase=\\\"2\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <h3 class=\\\"text-center\\\">User Cars Search Engine</h3>\\n      <form (ngSubmit)=\\\"saveTheFormData(carObj)\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"form-check form-check-inline\\\">\\n              <b>Features</b>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"features\\\"   (change)=\\\"collectFeatures('GPS')\\\"  id=\\\"inlineCheckbox1\\\" value=\\\"option1\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"features\\\">GPS</label>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"features\\\"   (change)=\\\"collectFeatures('Security Lock')\\\" id=\\\"inlineCheckbox2\\\" value=\\\"option2\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"features\\\">Security Lock</label>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"features\\\"   (change)=\\\"collectFeatures('Cargo Mat')\\\" id=\\\"inlineCheckbox3\\\" value=\\\"option2\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"features\\\">Cargo Mat</label>\\n              </div>\\n      </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"pDate\\\">Purchase Date</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"purchaseDate\\\" [(ngModel)]=\\\"carObj.purchaseDate\\\" id=\\\"pDate\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit form</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Car } from '../common/car';\nimport { Router } from '@angular/router';\nimport { DataService } from '../common/data.service';\n\n@Component({\n  selector: 'app-add-car',\n  templateUrl: './add-car.component.html',\n  styleUrls: ['./add-car.component.css']\n})\nexport class AddCarComponent implements OnInit {\n  step = \"1\"\n  carObj : Car\n  features = []\n  constructor(private route : Router,private dataService : DataService) { \n    this.carObj = new Car;\n    this.carObj.model = ''\n  }\n\n  ngOnInit() {\n  }\n\n\n  \n  collectFeatures(item){\n    if(this.features.includes(item)){\n      this.features.splice(this.features.indexOf(item),1)\n    }else{\n      this.features.push(item)\n    }\n    \n  }\n\n  goToStep2(carObj){\n    console.log(carObj)\n    this.step = \"2\"\n  }\n\n  saveTheFormData(carObj) {\n    carObj.features = this.features.toString()\n    console.log(carObj)\n    this.dataService.addCarDetail(this.carObj)\n      .subscribe((data:any) => {\n        console.log(data)\n        this.route.navigate([\"/detailCar/\"+ data.id]);\n      },\n    err=>{\n      console.log(\"error\",err)\n    })\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddCarComponent } from './add-car/add-car.component';\nimport { DetailComponent } from './detail/detail.component';\n\nconst routes: Routes = [\n  {path : 'addCar', component: AddCarComponent},\n  {path : 'detailCar/:id', component :DetailComponent},\n  {path : '', redirectTo:\"/addCar\", pathMatch:\"full\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{useHash : true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddCarComponent } from './add-car/add-car.component';\nimport { DetailComponent } from './detail/detail.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddCarComponent,\n    DetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Car {\r\n    make: string;\r\n    model: string;\r\n    year: Number;\r\n    type: string;\r\n    features: string;\r\n    purchaseDate: Date;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http : HttpClient) { }\n\n  addCarDetail(data){\n    return this.http.post(\"https://mean-exam.herokuapp.com/saveCarDetails\",data)\n  }\n\n  getCarDetail(){\n    return this.http.get(\"https://mean-exam.herokuapp.com/getAllCarDetail\")\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  \\n  \\n  <p class=\\\"col-sm-12\\\">The user selected the following input : </p>\\n  <p class=\\\"col-sm-12\\\">{{carDetail?.make + \\\" \\\"+carDetail?.model + \\\" \\\"\\n      +carDetail?.type + \\\" with \\\"+ carDetail?.features + \\\" on \\\"}}\\n       {{ carDetail?.purchaseDate | date:'MM/dd/yyyy'}}</p>\\n  <p class=\\\"col-sm-12\\\">The user will get {{discount}} </p>\\n  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../common/data.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n  sessionId: any\n  carDetail : any\n  discount : number\n  constructor(private route: ActivatedRoute, private dataService: DataService) { }\n\n  ngOnInit() {\n    this.sessionId = \"5b2c6d3baabf8f2d84988a97\"\n    this.dataService.getCarDetail().subscribe(\n      (data : any) => {\n        console.log(data.data)\n        console.log(data.data.length)\n        this.carDetail = data.data[data.data.length - 1]\n\n        if(this.carDetail && this.carDetail.purchaseDate){\n          var date = new Date(this.carDetail.purchaseDate).toString()\n          if(parseInt(date.substr(8, 2)) % 2 ==0){\n            this.discount = 40\n          }else{\n            this.discount = 30\n          }\n          console.log( parseInt(this.carDetail.purchaseDate.substr(8, 2)))\n          console.log( date)\n\n        }\n      });\n    // this.route.params.subscribe(params => {\n    //   this.sessionId = params['id'];\n    //   console.log(this.sessionId)\n    //   this.dataService.getCarDetail(this.sessionId).subscribe(\n    //     (data) => {\n    //       console.log(data)\n    //      // this.carDetail = data.data\n    //     });\n    // },_err=>{\n    //   console.log(\"Error\")\n    // })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}